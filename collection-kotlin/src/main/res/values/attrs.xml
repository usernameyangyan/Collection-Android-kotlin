<?xml version="1.0" encoding="utf-8"?>
<resources>

	<declare-styleable name="StateView">
		<!--加载动画-->
		<attr name="loadingViewAnimation" format="reference"/>
		<!--加载提示-->
		<attr name="loadingText" format="string"/>
		<!--空布局显示图片-->
		<attr name="emptyImage" format="reference"/>
		<attr name="emptyText" format="string"/>
		<attr name="emptyViewRes" format="reference"/>
		<!--断网显示图片-->
		<attr name="disConnectImage" format="reference"/>
		<attr name="disConnectText" format="string"/>
		<!-- 文字大小 -->
		<attr name="tipTextSize" format="dimension"/>
		<!-- 文字颜色 -->
		<attr name="tipTextColor" format="color"/>

		<attr name="bgColor" format="color"/>
	</declare-styleable>

	<attr name="styleStateView" format="reference"/>

	<style name="StateView">
	</style>

	<style name="StateView.Config">
		<item name="loadingText">正在加载中...</item>
		<item name="emptyImage">@mipmap/collection_library_ic_bttom_loading_01</item>
		<item name="emptyText">没有数据...</item>
		<item name="disConnectImage">@mipmap/collection_library_icon_disconnect</item>
		<item name="disConnectText">发生错误，请点击重试...</item>

		<item name="tipTextSize">14sp</item>
		<item name="tipTextColor">#8a000000</item>
		<item name="bgColor">#ffffff</item>
	</style>


	<declare-styleable name="CommonTabLayout">
		<attr name="tab_c_tabIndicatorWidth" format="dimension"/>
		<attr name="tab_c_tabWidth" format="dimension"/>
		<attr name="tab_c_tabIndicatorHeight"  format="dimension"/>
		<attr name="tab_c_tabIndicatorColor"  format="color"/>
		<attr name="tab_c_indicator_marginLeft" format="dimension"/>
		<attr name="tab_c_indicator_marginRight" format="dimension"/>
		<attr name="tab_c_indicator_marginTop" format="dimension"/>
		<attr name="tab_c_indicator_marginBottom" format="dimension"/>
		<attr name="tab_c_tabTextColor" format="color"/>
		<attr name="tab_c_tabTextSize" format="dimension"/>
		<attr name="tab_c_tabSelectedTextColor" format="color"/>
		<attr name="tab_c_padding" format="dimension"/>
		<attr name="tab_c_indicator_corner" format="dimension"/>
		<attr name="tab_c_textAllCaps" format="boolean"/>
		<attr name="tab_c_indicator_gravity">
			<enum name="bottom" value="0"/>
			<enum name="top" value="1"/>
		</attr>
		<attr name="tab_c_tabMode">
			<enum name="scrollable" value="0"/>
			<enum name="fixed" value="1"/>
		</attr>
		<attr name="tab_c_indicator_style">
			<enum name="line" value="0"/>
			<enum name="triangle" value="1"/>
			<enum name="block" value="2"/>
		</attr>
	</declare-styleable>

	<declare-styleable name="OutSideFrameTabLayout">
		<attr name="tab_tabIndicatorColor" format="color"/>
		<attr name="tab_indicator_corner" format="dimension"/>
		<attr name="tab_indicator_marginLeft" format="dimension"/>
		<attr name="tab_indicator_marginRight" format="dimension"/>
		<attr name="tab_indicator_marginTop" format="dimension"/>
		<attr name="tab_indicator_marginBottom" format="dimension"/>
		<attr name="tab_tabTextColor" format="color"/>
		<attr name="tab_tabTextSize" format="dimension"/>
		<attr name="tab_tabSelectedTextColor" format="color"/>
		<attr name="tab_padding" format="dimension"/>
		<attr name="tab_textAllCaps" format="boolean"/>
		<attr name="tab_bar_color" format="color"/>
		<attr name="tab_bar_stroke_color" format="color"/>
		<attr name="tab_bar_stroke_width" format="dimension"/>
		<attr name="tab_width" format="dimension"/>
	</declare-styleable>


	<declare-styleable name="FlexboxLayout">
		<attr name="flexDirection">
			<enum name="row" value="0" />
			<enum name="row_reverse" value="1" />
			<enum name="column" value="2" />
			<enum name="column_reverse" value="3" />
		</attr>

		<attr name="flexWrap">
			<enum name="nowrap" value="0" />
			<enum name="wrap" value="1" />
			<enum name="wrap_reverse" value="2" />
		</attr>

		<!--
            Omitting flex-flow property since it's reflected in the parent flex container.
            Set the flexDirection and/or flexWrap to the parent flex container explicitly if you
            want to use the flex-flow similar way to the web.
         -->

		<attr name="justifyContent">
			<enum name="flex_start" value="0" />
			<enum name="flex_end" value="1" />
			<enum name="center" value="2" />
			<enum name="space_between" value="3" />
			<enum name="space_around" value="4" />
			<enum name="space_evenly" value="5" />
		</attr>

		<attr name="alignItems">
			<enum name="flex_start" value="0" />
			<enum name="flex_end" value="1" />
			<enum name="center" value="2" />
			<enum name="baseline" value="3" />
			<enum name="stretch" value="4" />
		</attr>

		<attr name="alignContent">
			<enum name="flex_start" value="0" />
			<enum name="flex_end" value="1" />
			<enum name="center" value="2" />
			<enum name="space_between" value="3" />
			<enum name="space_around" value="4" />
			<enum name="stretch" value="5" />
		</attr>

		<attr name="dividerDrawable" format="reference" />
		<attr name="dividerDrawableHorizontal" format="reference" />
		<attr name="dividerDrawableVertical" format="reference" />

		<attr name="showDivider">
			<flag name="none" value="0" />
			<flag name="beginning" value="1" />
			<flag name="middle" value="2" />
			<flag name="end" value="4" />
		</attr>
		<attr name="showDividerHorizontal">
			<flag name="none" value="0" />
			<flag name="beginning" value="1" />
			<flag name="middle" value="2" />
			<flag name="end" value="4" />
		</attr>
		<attr name="showDividerVertical">
			<flag name="none" value="0" />
			<flag name="beginning" value="1" />
			<flag name="middle" value="2" />
			<flag name="end" value="4" />
		</attr>

		<!--
            The attribute that specifies the maximum number of flex lines. This attribute is
            effective only when the flexWrap attribute is "wrap" or "wrap_reverse".
        -->
		<attr name="maxLine" format="integer" />

	</declare-styleable>

	<declare-styleable name="FlexboxLayout_Layout">
		<attr name="layout_order" format="integer" />

		<!-- Negative numbers are invalid. -->
		<attr name="layout_flexGrow" format="float" />

		<!-- Negative numbers are invalid. -->
		<attr name="layout_flexShrink" format="float" />

		<!--
            The initial length in a percentage format relative to its parent. This is similar to the
            flex-basis property in the original CSS specification.
            (https://www.w3.org/TR/css-flexbox-1/#flex-basis-property)
            But unlike the flex-basis property, this attribute only accepts a value in fraction
            (percentage), whereas flex-basis property accepts width values such as 1em, 10px and
            the 'content' string.
            But specifying initial fixed width values can be done by specifying width values in
            layout_width (or layout_height, varies depending on the flexDirection). Also the same
            effect can be done by specifying "wrap_content" in layout_width (or layout_height) if
            developers want to achieve the same effect as 'content'.
            Thus, this attribute only accepts fraction values, which can't be done through
            layout_width (or layout_height) for simplicity.
        -->
		<attr name="layout_flexBasisPercent" format="fraction" />

		<!--
            Omitting flex property since it's a shorthand for layout_flexGrow and layout_flexShrink
            and layout_percentInParent (flex-basis in the original CSS spec).
        -->

		<attr name="layout_alignSelf">
			<enum name="auto" value="-1" />
			<!-- The values below need to match the values of alignItems -->
			<enum name="flex_start" value="0" />
			<enum name="flex_end" value="1" />
			<enum name="center" value="2" />
			<enum name="baseline" value="3" />
			<enum name="stretch" value="4" />
		</attr>

		<attr name="layout_minWidth" format="dimension" />
		<attr name="layout_minHeight" format="dimension" />
		<attr name="layout_maxWidth" format="dimension" />
		<attr name="layout_maxHeight" format="dimension" />

		<attr name="layout_wrapBefore" format="boolean" />
	</declare-styleable>



	<declare-styleable name="SkinBackgroundHelper">
		<attr name="android:background" />
	</declare-styleable>

	<declare-styleable name="SkinCompatImageView">
		<attr name="android:src" />
		<attr name="srcCompat" />
	</declare-styleable>

	<declare-styleable name="SkinCompatTextHelper">
		<attr name="android:drawableLeft" />
		<attr name="android:drawableTop" />
		<attr name="android:drawableRight" />
		<attr name="android:drawableBottom" />
		<attr name="android:drawableStart" />
		<attr name="android:drawableEnd" />
		<attr name="android:textAppearance" />
	</declare-styleable>

	<declare-styleable name="SkinTextAppearance">
		<attr name="android:textSize" />
		<attr name="android:textColor" />
		<attr name="android:textColorHint" />
		<attr name="android:textStyle" />
		<attr name="android:typeface" />
		<attr name="textAllCaps" />
		<attr name="android:shadowColor" />
		<attr name="android:shadowDy" />
		<attr name="android:shadowDx" />
		<attr name="android:shadowRadius" />
	</declare-styleable>
	<declare-styleable name="SkinCompatProgressBar">
		<attr name="android:indeterminateDrawable" />
		<attr name="android:progressDrawable" />
	</declare-styleable>

</resources>